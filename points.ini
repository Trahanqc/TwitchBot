; When someone join the channel, start the points timer
on !*:join:#: {
  ; Start a timer that is looping forever each 60seconds that will call the alias add.pts with the viewer name as a parameter
  $+(.timerpoints.,#,.,$nick) 0 60 add.pts $nick
  
  ; Add the points when you connect
  add.pts $nick

  ; Check for achievements
  achievement.check $nick

  ; Write to History
  var %time = $+([,$time,])
  echo 4 -a %time $nick has joinned the channel.
}

; When someone leave the channel, stop the points timer
on !*:part:#: {
  ; Kill the infinite loop for a specific viewer
  $+(.timerpoints.,#,.,$nick) off

  ; Write to history
  var %time = $+([,$time,])
  echo 6 -a %time $nick has left the channel.
}

; Display the points a user have
on *:text:!points:#:{
  ; If the command isn't exactly !points, stop executing the code
  if ($1 != !points) return
  
  ; This is more a spam protect, 2secs before anyone can use this command again, 10sec for you
  if ((%floodpoints) || ($($+(%,floodpoints.,$nick),2))) { return }
  set -u2 %floodpoints On
  set -u10 %floodpoints. $+ $nick On
  
  ; Set a message to the Twitch channel.  I used $chan because someone has enter a command from a channel to
  ; Start this code so the variable $chan is filled with the channel name.
  ; Samething with the $nick but it's gonna display the person who typed the command
  ; $readini allow you to read from an .ini file. Params: 1. File name, 2. Section name, 3. Variable name
  msg $chan $nick has $readini(Points.ini,$+(#,.,$nick),Points) points
  
  ; Then I'm looking for any new achievements (Not included in this script)
  achievement.check $nick
}

; Allow a Mod to add or remove points from someone
; I'm using a regex for [Param2]
on $*:text:/!points (add|remove)/Si:#:{
  ; Params:
  ; Param0: Number of paramters in the command
  ; Param1: !points
  ; Param2: 'add' or 'remove'
  ; Param3: Viewer name
  ; Param4: Amount
  
  ; Check if the person who called the command is a moderator of the channel
  if ($nick isop #) {
    ; If there is less than 3 parameters (E.g. !ooints param1 param2 param3) then stop the code
    if ($0 < 3) { msg # Insufficient parameters: Use !points [add|remove] [user][number] | return }

	; Limit points you can add or remove in a single command
    var %limit = 10000

	; If the 4th parameter is a number and is under the limit
    if ($4 isnum && $4 <= %limit) {
	  ; write into `Points.ini` at the section `[Param 3]` at the variable `points` the new amount of points the person has
	  ; Grab the amount he already have and add or remove (depending on `[Param2]`) the number in `[Param4]`
      writeini -n Points.ini $+(#,.,$3) Points $calc($readini(Points.ini,$+(#,.,$3),Points) $iif($2 == add,+,-) $iif($4 isnum,$round($4,0),1))

      ; Check for achievements
      achievement.check $3

      ; Write to History
      var %time = $+($date,$chr(32),$time)
      write -il1 History.txt $+([,%time,]) $nick $2 $round($4,0) points to $3

	  ; Write to the channel the number of points the person now has
      msg $chan $3 now has $readini(Points.ini,$+(#,.,$3),Points) total points.
    }
    else {
	  ; Write to the channel that you exceeded the limit
      msg $chan You can't add or remove that amount of points. Max is %limit
    }
  }
  else { 
    ; Write to the channel that you're not a moderator so you can't use this command
    msg $chan This command is only available to moderators. 
  }
}

; Alias to add points when the points timer triggers
alias -l add.pts {
  ; If the stream is online (Not included in the script)
  if (%streamOn == 1) {
	; Add the number of points per minute you want (%pointsRate)
    writeini -n Points.ini $+(#got_me,.,$1) Points $calc($readini(Points.ini,$+(#got_me,.,$1),Points) + %pointsRate)
  }
  else {
    ; %pointsMins = 10
	; Each 10minutes it's gonna add points to the viewer
	; Might not be the best way to do haha
    if (%minsOffline >= %pointsMins) {
      %minsOffline = 0
      writeini -n Points.ini $+(#got_me,.,$1) Points $calc($readini(Points.ini,$+(#got_me,.,$1),Points) + %pointsRate)
    }
    else {
      inc %minsOffline
    }
  }

  ; Checking for achievements
  achievement.check $1

}

; Allow a user to give some of their points
on *:text:!givepoints*:#: {
  if ($1 != !givepoints) return
  if ($0 != 3) || ($3 !isnum) {
    msg $chan Insufficient or incorrect parameters: use !givepoints [user] [number]
    Halt
  }
  if ($3 <= 0) {
    msg $chan $nick you cannot give someone less than 1 point
    halt
  }
  if ($readini(Points.ini,$+(#,.,$2),Points) = $null) {
    msg $chan $nick I do not recognise that name, please check your spelling or that you have the correct name and try again.
    Halt
  }
  else {
    if ($2 == $nick) {
      msg $chan $nick you cannot give points to yourself
      Halt
    }
    if ($readini(Points.ini,$+(#,.,$nick),Points) >= $3) {
      var %pointsToGive = $round($3,0)

      writeini -n Points.ini $+(#,.,$2) Points $calc($readini(Points.ini,$+(#,.,$2),Points) + %pointsToGive)
      writeini -n Points.ini $+(#,.,$nick) Points $calc($readini(Points.ini,$+(#,.,$nick),Points) - %pointsToGive)
      msg $chan $nick has given %pointsToGive of their points to $2, $2 now has $readini(Points.ini,$+(#,.,$2),Points) points.

      ; Add the points given to the user who gifted their points
      var %curVal = $readini(Points.ini,$+(#,.,$nick),PointsGiven)
      if (%curVal == $null) {
        %curVal = 0
      }
      writeini -n Points.ini $+(#,.,$nick) PointsGiven $calc(%curVal + %pointsToGive)

      ; Check for achievements
      achievement.check $2
      achievement.check $nick

      ; Write to History
      var %time = $+($date,$chr(32),$time)
      write -il1 History.txt $+([,%time,]) $nick gives %pointsToGive points to $2

      halt
    }
    elseif ($readini(Points.ini,$+(#,.,$nick),Points) < $3) {
      msg $chan $nick you do not have that many points to give.
      halt
    }
  }
}

; Display the points a certain user have
on *:text:!getpoints*:#: {
  if ($1 != !getpoints) return
  if ($0 == 2) {
    var %points = $readini(Points.ini,$+(#,.,$2),Points)

    if (%points == $null) {
      msg $chan Sorry $2 was not found in the points system.
    }
    else {
      msg $chan $2 has %points points.

      achievement.check $2
    }
  }
  else {
    msg $chan Wrong parameters. Use !getpoints [user]
  }
}

; Display the X users with the most points
on *:text:!toppoints*:#: {
  if ($1 != !toppoints) return

  if ($0 == 1) {
    var %nbLoop = 5
  }
  elseif ($0 == 2) {
    if ($2 isnum) {
      if ($2 > 0 && $2 <= 10) {
        var %nbLoop = $2
      }
      else {
        msg $chan Wrong parameters.  Number must be between 1 and 10
        return
      }
    }
    else {
      msg $chan Wrong parameters.  Use !toppoints [number]
      return
    }
  }
  else {
    msg $chan Wrong parameters.  Use !toppoints [number]
    return
  }

  var %i = 1
  var %j = 1
  var %channelLength = $calc($calc($len(#) + 1) * -1)
  var %done = 0

  while (%i <= %nbLoop) {
    var %max [ $+ [ %i ] ] 0
    var %name [ $+ [ %i ] ] unknown
    inc %i
  }

  while (%j <= $ini(Points.ini,0)) {
    var %section $ini(Points.ini,%j)
    var %points = $readini(Points.ini,%section,Points)
    var %fullname = $right(%section, %channelLength)

    if ($count(%fullname, nightbot) == 0 && $count(%fullname, xanbot) == 0 && $count(%fullname, twitchranks) == 0 && $count(%fullname, moobot) == 0) {
      var %x = %nbLoop    

      while (%x >= 1) {
        if (%points > %max [ $+ [ %x ] ] && %done == 0) {
          var %y = 1
          var %z = 2

          while (%y <= %x) {
            if (%y < %x) {
              var %temp = %max [ $+ [ %z ] ]
              var %temp2 = %name [ $+ [ %z ] ]
              SET %max [ $+ [ %y ] ] %temp
              SET %name [ $+ [ %y ] ] %temp2
            }
            else {
              SET %max [ $+ [ %y ] ] %points
              SET %name [ $+ [ %y ] ] %fullname
            }

            inc %y
            inc %z
          }
          %done = 1
        }
        dec %x
      }
    }
    %done = 0
    inc %j
  }

  var %string = Top %nbLoop points :
  var %i = 1 

  while (%nbLoop >= 1) {
    %string = %string $+ $+($chr(32),%i,$chr(46),$chr(32)) %name [ $+ [ %nbLoop ] ] $+($chr(32)) %max [ $+ [ %nbLoop ] ] pts
    dec %nbLoop
    inc %i
  }

  msg $chan %string
}
